import {
  Component,
  OnInit,
  Input,
  OnChanges,
  SimpleChanges,
  EventEmitter,
  Output
} from '@angular/core';

@Component({
  selector: 'ae-password-validation',
  templateUrl: './password-validation.component.html',
  styleUrls: ['./password-validation.component.scss']
})
export class PasswordValidationComponent implements OnInit, OnChanges {
  charCount: number;
  upperCaseCount: number;
  lowerCaseCount: number;
  numberCount: number;
  nonAlphaNumericCount: number;
  isValid: boolean;

  @Input() passwordInput: string;
  @Output() passwordChecked: EventEmitter<boolean> = new EventEmitter();

  constructor() {
    this.resetCounts();
  }

  ngOnInit() {}

  ngOnChanges(changes: SimpleChanges): void {
    const inputChanges = changes.passwordInput;
    if (inputChanges.previousValue !== inputChanges.currentValue && inputChanges.currentValue != null) {
      this.validatePassword(inputChanges.currentValue);
    }
  }

  validatePassword(password: string) {
    this.resetCounts();
    const chars = password.split('');

    this.charCount = chars.length;

    chars.forEach(char => {
      // count number of capital letters
      if (char.match(/[A-Z]/)) {
        this.upperCaseCount++;
      }

      // count number of lowercase letters
      if (char.match(/[a-z]/)) {
        this.lowerCaseCount++;
      }

      // count number of numbers
      if (!isNaN(+char)) {
        this.numberCount++;
      }

      // count non Alpha Numeric of numbers
      if (/[^a-zA-Z0-9]/.test(char)) {
        this.nonAlphaNumericCount++;
      }
    });

    this.isValid =
      this.charCount >= 8 &&
      this.upperCaseCount > 0 &&
      this.lowerCaseCount > 0 &&
      this.numberCount > 0 &&
      this.nonAlphaNumericCount > 0;

    this.passwordChecked.emit(this.isValid);
  }

  resetCounts() {
    this.charCount = 0;
    this.upperCaseCount = 0;
    this.lowerCaseCount = 0;
    this.numberCount = 0;
    this.nonAlphaNumericCount = 0;
  }
}
